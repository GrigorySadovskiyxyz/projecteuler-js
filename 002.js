// Problem 2: Even Fibonacci Numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms.

function fiboEvenSum(n) {
  let sum = 0;
  let fibArray = [0, 1];
  let lastNumber = fibArray[fibArray.length - 1];
  let previousNumber;
  while (lastNumber <= n) {
    if (lastNumber % 2 === 0) {
      sum += lastNumber;
    }
    previousNumber = fibArray[fibArray.length - 2];
    fibArray.push(previousNumber + lastNumber);
    lastNumber = fibArray[fibArray.length - 1];
  }
  return sum;
}

console.log(fiboEvenSum(10));

// Did without recursive approach
